<#import "/common/app.ftl" as app> <#include "/common/common.ftl" /><!DOCTYPE html><html lang="en"><head>    <meta charset="UTF-8">    <meta http-equiv="Content-Language" content="zh-CN">    <meta name="keywords" content="">    <meta name="description" content="">    <meta name="copyright" content=""/>    <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">    <meta content="yes" name="apple-mobile-web-app-capable">    <meta content="black" name="apple-mobile-web-app-status-bar-style">    <meta content="telephone=no" name="format-detection">    <title>创客联盟</title>    <!-- css -->    <link href="${app.basePath}/static/touch/css/common.css" rel="stylesheet" type="text/css" />    <link href="${app.basePath}/static/touch/css/main.css" rel="stylesheet" type="text/css" />    <link href="${app.basePath}/static/touch/css/f-personalcenter.css" rel="stylesheet" type="text/css" />    <link rel="stylesheet" type="text/css" href="${app.basePath}/static/js/huploadify/Huploadify.css">    <!-- js -->    <script type="text/javascript" src="${app.basePath}/static/touch/js/jquery-1.9.1.min.js"></script>    <script type="text/javascript" src="${app.basePath}/static/touch/js/common.js"></script>    <script src="${app.basePath}/static/js/huploadify/jquery.Huploadify.js" type="text/javascript"></script>    <script type="text/javascript" src="${app.basePath}/static/js/Validform_v5.3.2_min.js"></script>    <script type="text/javascript" src="${app.basePath}/static/js/mobile/core.js"></script></head><body class="body_gray"><!-- header_top --><div class="top_heater">    <a href="${app.basePath}/mobile/user/productManage" title="返回商品管理" class="hleft hback"></a>    <span>商品上传编辑</span></div><!-- header_top end --><!-- Center Start --><form id="productForm" action="${app.basePath}/mobile/user/saveProduct"><section class="container product-upload">    <article>        <span>商品编号</span>        <input type="text" name="code" value="" datatype="n4-10" nullmsg="请填写商品编号！"/>    </article>    <article>        <span>上传图片</span>        <div id="file_upload"></div>        <div class="imgupload" id="imgShowDiv">        </div>        <span class="tips">小提示：亲，您可以 <a href="#" title="">选择图片美化</a> 选择图片美化，我们会帮您美化出简洁美观的产品图！当然，图片美化需要收取少量的加工费哦！</span>    </article>    <article>        <span>商品名称</span>        <input type="text" name="name" value="" datatype="*6-80" nullmsg="请填写商品名称！"/>    </article>    <article>        <span>商品介绍</span>        <textarea name="description" datatype="*0-10000"></textarea>    </article>    <article>        <span>供应商价</span>        <input type="text" name="supplierPrice" placeholder="选填" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写供应商价格" errormsg="价格格式错误2！"/>    </article>    <article>        <span>建议零售价</span>        <input type="text" name="salesPrice" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写建议零售价" errormsg="价格格式错误！" <#if isFreeProduct?? && isFreeProduct>readonly="readonly"</#if>/>        <input type="hidden" name="isFreeProduct" value="${isFreeProduct?c}">    </article>    <article>        <span>市场价</span>        <input type="text" name="marketPrice" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写市场价" errormsg="价格格式错误！"/>    </article>    <article>        <span>最高价</span>        <input type="text" name="highPrice" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写最高价" errormsg="价格格式错误！"/>    </article>    <article>        <span>最低价</span>        <input type="text" name="lowPrice" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写最低价" errormsg="价格格式错误！"/>    </article>    <article>        <span>邮费</span>        <input type="text" name="postage" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写邮费" errormsg="价格格式错误！"/>    </article>    <article>        <span>商品库存</span>        <input type="text" name="stock" value="0" datatype="/^\d+$/" nullmsg="请填写商品库存" errormsg="商品库存格式错误！"/>    </article>    <article>        <span>商品分类</span>    </article>    <article>    	<div id="typespn"></div><div id="twotypespn"></div><div id="onetypespn"></div>        <script>			$(function(){				getAllTypes({'obj':null,'num':0})		    });		</script>		<input type="hidden" id="productTypeId" name="typeId" value="" datatype="n1-10" nullmsg="请选择商品分类！">    </article>    <div id="attributeDiv">    </div>    <#--    <article>        <span>是否上架</span>        <select name="onshelf">            <option value="true">是</option>            <option value="false">否</option>        </select>    </article>    <article>        <span>最终售价</span>        <input type="text" name="price" value="0" datatype="/^[+-]?\d*\.?\d{1,2}$/" nullmsg="请填写最终售价" errormsg="价格格式错误！"/>    </article>    -->	<input type="hidden" id="attributeAssembleStr" name="attributeAssembleStr" value="">    <a href="javascript:skuAssemble();" id="productSubmmit" class="create-code" title="">完成</a></section></form><!-- Center End --><!--footer Start--><footer>    <span class="footclear"></span></footer><!--footer End--><script>   $(function(){   		// 初始化ValidForm插件		$("#productForm").Validform({			tiptype:function(msg,o,cssctl){			    //msg：提示信息;			    //o:{obj:*,type:*,curform:*},			    //obj指向的是当前验证的表单元素（或表单对象，验证全部验证通过，提交表单时o.obj为该表单对象），			    //type指示提示的状态，值为1、2、3、4， 1：正在检测/提交数据，2：通过验证，3：验证失败，4：提示ignore状态, 			    //curform为当前form对象;			    //cssctl:内置的提示信息样式控制函数，该函数需传入两个参数：显示提示信息的对象 和 当前提示的状态（既形参o中的type）;			    if(o.type == 3){			    	alert(msg);			    }			},			postonce:true, // 开启二次提交防御			ajaxPost:true, 			callback:function(data){				//返回数据data是json对象，{"info":"demo info","status":"y"}				//info: 输出提示信息;				//status: 返回提交数据的状态,是否提交成功。如可以用"y"表示提交成功，"n"表示提交失败，在ajax_post.php文件返回数据里自定字符，主要用在callback函数里根据该值执行相应的回调操作;				alert(data.info);				if(data.status  == 'y'){					window.location.href= basePath + "/mobile/user/productManage";				}			}		});		// 为提交按钮绑定事件		$("#productSubmmit").bind("click", function(){		  if( !skuAssemble()){		  	return false;		  }		  $("#productForm").submit();		});   		//初始化图片上传		$('#file_upload').Huploadify({				'multi': true, // 限制单图上传				'auto': true,				'formData' : {'type' : 'product'},				'swf'      : basePath+'/static/js/uploadify/uploadify.swf', // swf存放的路径				'fileObjName' : 'file',				'uploader' : basePath+'/uploadify/upload/singleFile',    // 处理上传的Servlet				'buttonText' : '添加图片',				//'buttonImage': '${app.basePath}/static/touch/images/add_72px_1199462_easyicon.net.png',				'onUploadSuccess' : function(file, data, response) {					var result = eval("("+data+")");					$("#imgShowDiv").append("<div class='imgedit'><img onclick='removeImg(this)' src='"+ basePath+result.savedFile +"' alt='图片不存在'/>"+"<input type='hidden' name='attachment' value='"+ result.savedFile +"'>"+"</div>");					//$("#imgShowDiv").append("<input type='hidden' name='attachment' value='"+result.savedFile +"'>");		        },		        'onUploadError' : function(file, errorCode, errorMsg, errorString) {		        	//alert('The file ' + file.name + ' could not be uploaded: ' + errorString);		        	alert("图片上传失败。");		        }		});	});	function getAllTypes(_settings){		var settings = {obj:"",num:0};		settings=$.extend(settings,_settings);		var url = basePath+"/agent/producttypeallselect";		var loadData = "";		if(settings.num==0){			loadData = {'parentId':0};			$("#onetypespn").loading().load(url,loadData);			$("#twotypespn").html("");			$("#typespn").html("");			$("#productTypeId").val("");		}else if(settings.num==1){			var upid = $(settings.obj).val();			loadData = {'parentId':upid};			$("#twotypespn").loading().load(url,loadData);			$("#typespn").html("");			$("#productTypeId").val("");			changeType();		}else if(settings.num==2){			var upid = $(settings.obj).val();			loadData = {'parentId':upid};			$("#typespn").loading().load(url,loadData);			$("#productTypeId").val("");			changeType();		}else if(settings.num==3){			var upid = $(settings.obj).val();			$("#productTypeId").val(upid);			changeType();		}	}	// 商品类别选择	function changeType(){		var typeId = $("#productTypeId").val();		//alert("我要去加载了, typeId:" + typeId);		var url = basePath+"/mobile/user/flushAttribute";		var loadData = {"typeId": typeId};		$.post(url, loadData, function(data){			$("#attributeDiv").html("");			$("#attributeDiv").html(data);		}, "text");	}		// 商品规格选项删除	function deleteOption(option){		$(option).parent().remove();	}	// 图片删除	function removeImg(option){		$(option).parent().remove();	}	// 货品组合	function skuAssemble(){		var typeid = $("#productTypeSelections").val();		if(typeid==0){			alert("请选择商品分类。");			return false;		}		$("#attributeAssembleStr").val("");		var articles = $("#attributeDiv").find("article");		var attributeArray = new Array();		var attributeAssembleStr = "";		for(var i = 0; i < articles.length; i ++){			var inputs = $(articles[i]).find("input");			var optionArray = new Array();			for(var j = 0; j < inputs.length; j ++){				optionArray.push($(inputs[j]).val());			}			attributeArray.push(optionArray);		}		console.log(attributeArray);		// 提交前判断货品规格数据是否正常		if(attributeArray.length == 0){			// 未选择			//alert("请选择正确的商品分类。");			//return false;		}else{			for(var i = 0; i < attributeArray.length; i ++){				if(attributeArray[i].length == 0){					// 有规格为空的					alert("规格不能为空。");					return false;					}			}						if(attributeArray.length == 1){				// 一种规格无需组合				for(var i = 0; i < attributeArray[0].length; i ++){					attributeAssembleStr = attributeAssembleStr + attributeArray[0][i];					if(i < attributeArray[0].length - 1){						attributeAssembleStr = attributeAssembleStr + ",";					}				}			}else{				// 至少两种规格				var alen = attributeArray.length;				var result = twoArrayAssembleToTrIds(attributeArray[0],attributeArray[1]);				var i=2;				while(i<alen){					result = twoArrayAssembleToTrIds(result,attributeArray[i]);					i ++;				}				for(var i = 0; i < result.length; i ++){					attributeAssembleStr = attributeAssembleStr + result[i];					if(i < result.length -1){						attributeAssembleStr = attributeAssembleStr + ",";					}				}			}		}		console.log(attributeAssembleStr);		$("#attributeAssembleStr").val(attributeAssembleStr);		return true;	}		// 二维数组全排列	function twoArrayAssembleToTrIds(arr1,arr2){		var arra = Array();		for(var m in arr1){			for(var n in arr2){				arra.push(arr1[m]+"|"+arr2[n]);			}		}		return arra;	}</script></body></html>