<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiandu.custom.entity.mapper.TdUserAccountLogMapper" >
  <resultMap id="BaseResultMap" type="com.tiandu.custom.entity.TdUserAccountLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="preamount" property="preamount" jdbcType="DECIMAL" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="upamount" property="upamount" jdbcType="DECIMAL" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="relation" property="relation" jdbcType="VARCHAR" />
    
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="totalUpamount" property="totalUpamount" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, preamount, type, upamount, create_time, note, relation
  </sql>
  <sql id="Base_Column_With_Username_List">
    g.id, g.uid, g.preamount, g.type, sum(g.upamount) as totalUpamount, g.create_time, g.note, g.relation, u.uname as username
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from td_user_account_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="findBySearchCriteria" resultMap="BaseResultMap" parameterType="com.tiandu.custom.search.TdUserAccountLogSearchCriteria" >
    select 
    <include refid="Base_Column_List" />
    from td_user_account_log
    where 1=1 
    <if test="uid != null" >
        and uid=#{uid,jdbcType=INTEGER}
    </if>
    <if test="beginDate != null">
		and create_time <![CDATA[ >= ]]>
		#{beginDate,jdbcType=TIMESTAMP}
	</if>
	<if test="endDate != null">
		and create_time <![CDATA[ < ]]>
		#{endDate,jdbcType=TIMESTAMP}
	</if>
	<if test="type != null">
		and type = #{type,jdbcType=TINYINT}
	</if>
	<choose>
		<when test="incomeType != null and incomeType == 1">and upamount <![CDATA[ >= ]]> 0 </when>
		<when test="incomeType != null and incomeType == 2">and upamount <![CDATA[ < ]]> 0 </when>
	</choose>
    order by create_time desc
  </select>
  
  <select id="countByCriteria" resultType="java.lang.Integer" parameterType="com.tiandu.custom.search.TdUserAccountLogSearchCriteria" >
    select count(id)
    from td_user_account_log
    where 1=1 
    <if test="uid != null" >
        and uid=#{uid,jdbcType=INTEGER}
    </if>
    <if test="beginDate != null">
		and create_time <![CDATA[ >= ]]>
		#{beginDate,jdbcType=TIMESTAMP}
	</if>
	<if test="endDate != null">
		and create_time <![CDATA[ < ]]>
		#{endDate,jdbcType=TIMESTAMP}
	</if>
	<if test="type != null">
		and type = #{type,jdbcType=TINYINT}
	</if>
	<choose>
		<when test="incomeType != null and incomeType == 1">and upamount <![CDATA[ >= ]]> 0 </when>
		<when test="incomeType != null and incomeType == 2">and upamount <![CDATA[ < ]]> 0 </when>
	</choose>
  </select>
  
  <select id="countGroupByCriteria" resultType="java.lang.Integer" parameterType="com.tiandu.custom.search.TdUserAccountLogSearchCriteria" >
  	select count(*) from (
    select count(*)
    from td_user_account_log as g
    left join td_user as u 
    on g.uid = u.uid
    where 1=1 
    and u.utype=1
    <if test="type != null">
		and g.type = #{type,jdbcType=TINYINT}
	</if>
    	
    <if test="username != null and username != ''" >
        and u.uname like CONCAT('%',#{username,jdbcType=VARCHAR},'%')
    </if>
	<if test="beginDate != null">
		and g.create_time <![CDATA[ >= ]]>
		#{beginDate,jdbcType=TIMESTAMP}
	</if>
	<if test="endDate != null">
		and g.create_time <![CDATA[ < ]]>
		#{endDate,jdbcType=TIMESTAMP}
	</if>
	group by g.uid) as t
  </select>
  
  <select id="findGroupBySearchCriteria" resultMap="BaseResultMap" parameterType="com.tiandu.custom.search.TdUserAccountLogSearchCriteria" >
    select 
    <include refid="Base_Column_With_Username_List" />
    from td_user_account_log as g
    left join td_user as u 
    on g.uid = u.uid
    where 1=1 
    and u.utype=1
    <if test="type != null">
		and g.type = #{type,jdbcType=TINYINT}
	</if>
    <if test="username != null and username != ''" >
        and u.uname like CONCAT('%',#{username,jdbcType=VARCHAR},'%')
    </if>
	<if test="beginDate != null">
		and g.create_time <![CDATA[ >= ]]>
		#{beginDate,jdbcType=TIMESTAMP}
	</if>
	<if test="endDate != null">
		and g.create_time <![CDATA[ < ]]>
		#{endDate,jdbcType=TIMESTAMP}
	</if>
	group by g.uid
    <choose>
		<when test="isAsc != null and isAsc == true">order by totalUpamount asc</when>
		<when test="isAsc != null and isAsc == false">order by totalUpamount desc</when>
	</choose>
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from td_user_account_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.tiandu.custom.entity.TdUserAccountLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into td_user_account_log (uid, preamount, type, 
      upamount, create_time, note, 
      relation)
    values (#{uid,jdbcType=INTEGER}, #{preamount,jdbcType=DECIMAL}, #{type,jdbcType=TINYINT}, 
      #{upamount,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{note,jdbcType=VARCHAR}, 
      #{relation,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.tiandu.custom.entity.TdUserAccountLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into td_user_account_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        uid,
      </if>
      <if test="preamount != null" >
        preamount,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="upamount != null" >
        upamount,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="relation != null" >
        relation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="preamount != null" >
        #{preamount,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="upamount != null" >
        #{upamount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        #{relation,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiandu.custom.entity.TdUserAccountLog" >
    update td_user_account_log
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="preamount != null" >
        preamount = #{preamount,jdbcType=DECIMAL},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="upamount != null" >
        upamount = #{upamount,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="relation != null" >
        relation = #{relation,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiandu.custom.entity.TdUserAccountLog" >
    update td_user_account_log
    set uid = #{uid,jdbcType=INTEGER},
      preamount = #{preamount,jdbcType=DECIMAL},
      type = #{type,jdbcType=TINYINT},
      upamount = #{upamount,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>